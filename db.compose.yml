version: "3"

# this file can be used in conjunction with docker-compose.yml and author.compose.yml to
# add a database server in the same docker-compose network as the other runestone components
# this file is not used by default, but can be used by running 
# docker compose -f docker-compose.yml -f author.compose.yml -f db.compose.yml up -d
# It may also be easier in some circumstances to just copy the db service from this file to
# the docker-compose.yml file.  Taking note to add db as a link for each of the other services
# The db service should be started before the other services, so that the database is available
# For first time initialization I recommend you do
# docker compose -f docker-compose.yml -f author.compose.yml -f db.compose.yml up -d db
# this will start only the database server.
# Then you can run rsmanage initdb to create the database and tables and some initial population of the tables
# If you do not need the author server you can comment out those lines in this file and omit the
# -f author.compose.yml from the command line
# DEV_DBURL=postgresql://runestone:runestone@localhost:2345/runestone_dev rsmanage initdb
services:
    db:
        image:
            postgres:13
        restart: always
        environment:
            # setting these will create a user with this password and a database with this name
            # this is a feature of the postgres docker image
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-runestone}
            POSTGRES_USER: ${POSTGRES_USER:-runestone}
            POSTGRES_DB: ${POSTGRES_DBNAME:-runestone_dev}
        # use a non-standard port to avoid conflicts with other postgres instances on the host
        ports: 
          - 2345:5432

    runestone:
      links:
        - db
    author:
      links:
        - db
    worker:
      links:
        - db  
    book:
      links:
        - db
    assignment:
      links:
        - db
    rsmanage:
      links:
        - db
        
