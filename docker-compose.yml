version: '3.8'

services:

  author:
    build: ./projects/author_server
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 8114:8114
    command: uvicorn rsptx.author_server_api.main:app --host 0.0.0.0 --port 8114 --reload
    volumes:
      - /Users/bmiller/Runestone/books:/books
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DEV_DBURL=postgresql://runestone:runestone@host.docker.internal/runestone_dev
      - RUNESTONE_PATH=/usr/src/app
    depends_on:
      - redis

  worker:
    build: ./projects/author_server
    extra_hosts:
      - host.docker.internal:host-gateway
    command: celery -A rsptx.author_server_api.worker.celery worker
    volumes:
      - /Users/bmiller/Runestone/books:/books
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - RUNESTONE_PATH=/usr/src/app
      - DEV_DBURL=postgresql://runestone:runestone@host.docker.internal/runestone_dev
      - WEB2PY_CONFIG=${SERVER_CONFIG}
    depends_on:
      - author
      - redis

  redis:
    image: redis:6-alpine

  jobe:
    build: ./projects/jobe

  book:
    build: ./projects/book_server
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 8111:8111
    command: uvicorn rsptx.book_server_api.main:app --host 0.0.0.0 --port 8111
    #command: tail -f /var/log/lastlog
    restart: always
    volumes:
      - /Users/bmiller/Runestone/books:/usr/books

    environment:
      - BOOK_PATH=/usr/books
      - SERVER_CONFIG=${SERVER_CONFIG}
      - RUNESTONE_PATH=/usr/src/app
      - REDIS_URI=redis://redis:6379/0
      # Note: host.docker.internal refers back to the host so we can just use a local instance
      # of postgresql
      - DEV_DBURL postgresql://runestone:runestone@host.docker.internal/runestone_dev
      - DOCKER_COMPOSE=1
    links:
      - redis
      - jobe

  runestone:
      build: ./projects/w2p_login_assign_grade
      extra_hosts:
        - host.docker.internal:host-gateway
      ports:
        - 8112:8112
      command: gunicorn --bind 0.0.0.0:8112 --workers 1 rsptx.web2py_server.wsgihandler:application

      #command: tail -f /var/log/lastlog
      restart: always
      volumes:
        - /Users/bmiller/Runestone/books:/usr/books

      environment:
        - BOOK_PATH=/usr/books
        - SERVER_CONFIG=${SERVER_CONFIG}
        - WEB2PY_CONFIG=${SERVER_CONFIG}
        - RUNESTONE_PATH=/usr/src/app
        - REDIS_URI=redis://redis:6379/0
        # Note: host.docker.internal refers back to the host so we can just use a local instance
        # of postgresql
        - DEV_DBURL postgresql://runestone:runestone@host.docker.internal/runestone_dev
      links:
        - redis
        - jobe

  assignment:
    build: ./projects/assignment_server
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 8113:8113
    command: uvicorn rsptx.assignment_server_api.core:app --host 0.0.0.0 --port 8113
    #command: tail -f /var/log/lastlog
    restart: always
    volumes:
      - /Users/bmiller/Runestone/books:/usr/books

    environment:
      - BOOK_PATH=/usr/books
      - SERVER_CONFIG=${SERVER_CONFIG}
      - RUNESTONE_PATH=/usr/src/app
      - REDIS_URI=redis://redis:6379/0
      # Note: host.docker.internal refers back to the host so we can just use a local instance
      # of postgresql
      - DEV_DBURL postgresql://runestone:runestone@host.docker.internal/runestone_dev
      - DOCKER_COMPOSE=1
    links:
      - redis
      - jobe


  nginx:
    
    # Note we use context: ./ here so that the Dockerfile can copy from the components folder
    build: 
      context: ./
      dockerfile: projects/nginx/Dockerfile
    
    ports:
      - 80:80
      #- 443:443
    volumes:
      - /Users/bmiller/Runestone/books:/usr/books
    links:
      - runestone
      - book
      - assignment
      - author
